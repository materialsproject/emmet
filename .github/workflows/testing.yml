name: testing

on:
  workflow_dispatch: # Allow running on-demand

  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  test:
    name: ${{ matrix.package }} (${{ matrix.os }}/py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"] # TODO openbabel for windows and mac
        package: ["emmet-core", "emmet-builders", "emmet-api"]
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          channels: anaconda, conda-forge

      - name: Install all conda requirements
        shell: bash -l {0}
        run: conda install openbabel openff-toolkit>=0.14.0 openff-interchange>=0.3.22 sqlite -y

      - name: Install Python dependencies
        shell: bash -l {0}
        run: |
          python${{ matrix.python-version }} -m pip install --upgrade pip pip-tools pre-commit
          python${{ matrix.python-version }} -m pip install --user `grep numpy ${{ matrix.package }}/requirements/${{ matrix.os }}_py${{ matrix.python-version }}_extras.txt`
          python${{ matrix.python-version }} -m pip install --user -r ${{ matrix.package }}/requirements/${{ matrix.os }}_py${{ matrix.python-version }}_extras.txt

      - name: generate Enums
        id: enums
        shell: bash -l {0}
        if: matrix.package == 'emmet-core'
        run: |
          python${{ matrix.python-version }} emmet-core/emmet/core/qchem/calc_types/generate.py
          python${{ matrix.python-version }} emmet-core/emmet/core/vasp/calc_types/generate.py
          pre-commit run --all-files --show-diff-on-failure
          echo "count=$(git diff-index HEAD emmet-core/emmet/core/*/calc_types/enums.py | wc -l | xargs)" >> $GITHUB_OUTPUT
          echo "files=$(git ls-files --exclude-standard --others emmet-core/emmet/core/*/calc_types/enums.py | wc -l | xargs)" >> $GITHUB_OUTPUT

      - name: commit & push enums changes
        if: matrix.package == 'emmet-core' && (steps.enums.outputs.count > 0 || steps.enums.outputs.files > 0)
        shell: bash -l {0}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add emmet-core/emmet/core/*/calc_types/enums.py
          git commit --allow-empty -m "update calc type enums"
          git push origin ${{ github.ref_name }}

      - name: Install editable emmet-core if needed
        shell: bash -l {0}
        if: matrix.package != 'emmet-core'
        run: python${{ matrix.python-version }} -m pip install --user --no-deps ./emmet-core

      - name: Install ${{ matrix.package }}
        shell: bash -l {0}
        run: python${{ matrix.python-version }} -m pip install --user --no-deps -e ./${{ matrix.package }}

      - name: Lint with mypy
        shell: bash -l {0}
        run: python${{ matrix.python-version }} -m mypy --namespace-package ${{ matrix.package }}/emmet

      - name: Test with pytest
        if: always() # run tests even if linting failed
        shell: bash -l {0}
        run: python${{ matrix.python-version }} -m pytest --cov=emmet --cov-report=xml ${{ matrix.package }}/tests

      - uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
