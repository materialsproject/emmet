name: testing

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      matrix:
        package: ["emmet-core", "emmet-builders", "emmet-api"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-testing.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 --count --show-source --statistics ${{ matrix.package }}
          # exit-zero treats all errors as warnings.
          flake8 --count --exit-zero --max-complexity=20 --statistics ${{ matrix.package }}

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      matrix:
        package: ["emmet-core", "emmet-builders", "emmet-api"]
        python_version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python_version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install OpenBabel
        shell: bash -l {0}
        run: conda install -c conda-forge openbabel

      - name: Install Python dependencies
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-testing.txt
          pip install -r requirements.txt

      - name: Install Packages
        shell: bash -l {0}
        run: |
          pip install -e emmet-core
          pip install -e emmet-builders
          pip install -e emmet-api

      - name: Lint with mypy
        shell: bash -l {0}
        run: mypy --namespace-package ${{ matrix.package }}/emmet

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest --cov=emmet --cov-report=xml tests/${{ matrix.package }}

      - uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  docs:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-docs.txt
          pip install -r requirements.txt
          pip install -e emmet-core/
          pip install -e emmet-builders/
          pip install -e emmet-api/

      - name: Build
        run: mkdocs build
